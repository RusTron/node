[{"C:\\test\\node_task\\src\\components\\Dialog\\Dialog.jsx":"1","C:\\test\\node_task\\src\\api\\index.js":"2","C:\\test\\node_task\\src\\App.js":"3","C:\\test\\node_task\\src\\store\\reducers\\usersReducer.js":"4","C:\\test\\node_task\\src\\variables\\index.js":"5","C:\\test\\node_task\\src\\components\\Users\\Users.jsx":"6","C:\\test\\node_task\\src\\components\\Header\\Header.jsx":"7","C:\\test\\node_task\\src\\components\\MessagesList\\MessagesList.jsx":"8","C:\\test\\node_task\\src\\components\\Dialog\\index.js":"9","C:\\test\\node_task\\src\\reportWebVitals.js":"10","C:\\test\\node_task\\src\\components\\MessagesList\\index.js":"11","C:\\test\\node_task\\src\\index.js":"12","C:\\test\\node_task\\src\\store\\store.js":"13","C:\\test\\node_task\\src\\components\\Users\\index.js":"14","C:\\test\\node_task\\src\\store\\reducers\\loadingReducer.js":"15"},{"size":3034,"mtime":1609699489164,"results":"16","hashOfConfig":"17"},{"size":455,"mtime":1609400774843,"results":"18","hashOfConfig":"17"},{"size":1026,"mtime":1609630878068,"results":"19","hashOfConfig":"17"},{"size":1527,"mtime":1609697893611,"results":"20","hashOfConfig":"17"},{"size":260,"mtime":1609627839002,"results":"21","hashOfConfig":"17"},{"size":2807,"mtime":1609684892681,"results":"22","hashOfConfig":"17"},{"size":2910,"mtime":1609670835208,"results":"23","hashOfConfig":"17"},{"size":594,"mtime":1609634482710,"results":"24","hashOfConfig":"17"},{"size":26,"mtime":1609369262602,"results":"25","hashOfConfig":"17"},{"size":399,"mtime":1608682146165,"results":"26","hashOfConfig":"27"},{"size":32,"mtime":1609093264068,"results":"28","hashOfConfig":"17"},{"size":593,"mtime":1609632702204,"results":"29","hashOfConfig":"17"},{"size":485,"mtime":1609248278998,"results":"30","hashOfConfig":"17"},{"size":25,"mtime":1608797404357,"results":"31","hashOfConfig":"17"},{"size":466,"mtime":1609629641526,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"35"},"165548v",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zw3unr",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\test\\node_task\\src\\components\\Dialog\\Dialog.jsx",["68","69","70","71"],"import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionCreators } from '../../store/reducers/usersReducer';\n// import socket from '../../socket';\nimport { sendData } from '../../api';\nimport nonActiveLabel from '../../images/non-active.svg';\nimport halfLabel from '../../images/half-label.svg';\nimport './Dialog.scss';\n\nexport const Dialog = ({ interlocutorId }) => {\n  const [query, setQuery] = useState('');\n  const dispatch = useDispatch();\n\n  const updatedUsers = useSelector(({ users }) => users.users);\n  const updatedUser = updatedUsers.filter((person) => person.id.toString() === interlocutorId)[0];\n\n  const addData = (e) => {\n    e.preventDefault();\n    sendData(query, interlocutorId)\n      .then((res) => res.data)\n      .then((value) => dispatch(actionCreators.addMessage(value)));\n    setQuery('');\n  };\n\n  const getTime = (time) => {\n    const minutes = new Date(+time).getMinutes().toString();\n    return `${new Date(+time).getHours()}:${minutes.length === 2 ? minutes : (`0${minutes}`)}`;\n  };\n\n  return (\n    <>\n      {updatedUser.messages.map((message) => (\n        <div\n          className=\"messages__item message\"\n          style={message.sent && { justifyContent: 'flex-end' }}\n          key={message.id}\n        >\n          <div className={`message__content message__content--${message.sent ? 'sent' : 'received'}`}>\n            <span className=\"message__text\">\n              {message.received || message.sent}\n            </span>\n            <p className=\"message__info\">\n              <span className=\"message__time\">{Number.isNaN(+message.time) ? message.time : getTime(+message.time)}</span>\n              {message.sent && (\n                <img\n                  src={`./images/${message.read}.svg`}\n                  alt=\"\"\n                  className=\"message__status\"\n                />\n              )}\n            </p>\n          </div>\n        </div>\n      ))}\n      <form\n        className=\"messages__input input\"\n        onSubmit={addData}\n      >\n        <input\n          type=\"text\"\n          id=\"message-input\"\n          className=\"input__item\"\n          placeholder=\"Write a message\"\n          value={query}\n          onChange={({ target }) => setQuery(target.value.trimLeft())}\n        />\n        <button\n          type=\"submit\"\n          className={classNames('input__send', { 'input__send--active': query })}\n        >\n          <label htmlFor=\"message-input\" className=\"input__label\">\n            {!query\n              ? (\n                <img src={nonActiveLabel} alt=\"non-active-label\" />\n              ) : (\n                <>\n                  <img src={halfLabel} alt=\"active-label\" />\n                  <img src={halfLabel} alt=\"active-label\" className=\"input__label--second\" />\n                </>\n              )}\n          </label>\n        </button>\n      </form>\n    </>\n  );\n};\n\nDialog.propTypes = {\n  interlocutorId: PropTypes.string.isRequired,\n};\n","C:\\test\\node_task\\src\\api\\index.js",[],"C:\\test\\node_task\\src\\App.js",["72"],"import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actionCreators } from './store/reducers/usersReducer';\nimport { loadingActions } from './store/reducers/loadingReducer';\nimport socket from './socket';\nimport { Header } from './components/Header';\nimport { Users } from './components/Users';\nimport { MessagesList } from './components/MessagesList';\nimport { fetchData } from './api';\nimport './App.scss';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const dispatchMessage = (messageFromSocket) => {\n    dispatch(actionCreators.addMessage(messageFromSocket));\n  };\n\n  useEffect(() => {\n    dispatch(fetchData);\n    socket.on('Receive message', (messageFromSocket) => {\n      debugger; //eslint-disable-line\n      dispatchMessage(messageFromSocket);\n    });\n    dispatch(loadingActions.finishLoading());\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <main className=\"main\">\n        <Users />\n        <MessagesList />\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","C:\\test\\node_task\\src\\store\\reducers\\usersReducer.js",[],"C:\\test\\node_task\\src\\variables\\index.js",[],"C:\\test\\node_task\\src\\components\\Users\\Users.jsx",["73"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Loader from 'react-loader-spinner';\nimport socket from '../../socket';\nimport { actionCreators } from '../../store/reducers/usersReducer';\nimport { millisecondsInDay } from '../../variables';\nimport './Users.scss';\n\nexport const Users = () => {\n  const dispatch = useDispatch();\n  const usersFromServer = useSelector(({ users }) => users.users);\n  const loadingState = useSelector(({ loading }) => loading);\n  const currentInterlocutorId = useSelector(({ users }) => users.interlocutorId);\n\n  const getDialog = (e) => {\n    const { id } = e.currentTarget.dataset;\n    if (id === currentInterlocutorId) return;\n    socket.emit('Open dialog', id);\n    dispatch(actionCreators.setInterlocutorId(id));\n  };\n\n  const chooseLastMessage = (message) => {\n    const messageText = Object.values(message)[0];\n    return messageText.length > 30 ? `${messageText.slice(1, 30)}...` : messageText;\n  };\n\n  const getTime = (time) => {\n    const currentTime = Date.now();\n    const date = new Date(+time);\n    const minutes = date.getMinutes().toString();\n    if (currentTime - time > millisecondsInDay) return date.toDateString().split(' ')[0];\n    if (currentTime - time > millisecondsInDay * 7) return `${date.toLocaleDateString()}`;\n    return `${date.getHours()}:${minutes.length === 2 ? minutes : (`0${minutes}`)}`;\n  };\n\n  return (\n    <div className={classNames('users', { 'data-loading': loadingState })}>\n      {loadingState ? (\n        <Loader\n          type=\"Grid\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      ) : (\n        <div className=\"users__body\">\n          {usersFromServer.map((user) => (\n            <Link to={`/${user.id}`}>\n              <div\n                aria-hidden=\"true\"\n                className=\"users__item user\"\n                onClick={getDialog}\n                data-id={user.id}\n                key={console.log(user)}\n              >\n                {user.image ? (\n                  <img\n                    src={user.image}\n                    alt=\"\"\n                    className=\"user__photo\"\n                  />\n                ) : (\n                  <div className=\"user__no-photo\">{user.name[0]}</div>\n                )}\n                <div className=\"user__info\">\n                  <span className=\"user__name\">{user.name}</span>\n                  <span className=\"user__text\">{chooseLastMessage(user.messages[user.messages.length - 1])}</span>\n                </div>\n                <span className=\"user__time\">{getTime(user.time)}</span>\n              </div>\n            </Link>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","C:\\test\\node_task\\src\\components\\Header\\Header.jsx",["74","75","76","77","78"],"C:\\test\\node_task\\src\\components\\MessagesList\\MessagesList.jsx",["79"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { Dialog } from '../Dialog';\nimport './MessagesList.scss';\n\nexport const MessagesList = () => {\n  const interlocutorId = useSelector(({ users }) => users.interlocutorId);\n  console.log(interlocutorId);\n  return (\n    <div className=\"messages\">\n      <div className=\"messages__body\">\n        {interlocutorId && (\n          <Route path={`/${interlocutorId}`}>\n            <Dialog interlocutorId={interlocutorId} />\n          </Route>\n        )}\n      </div>\n    </div>\n  );\n};\n","C:\\test\\node_task\\src\\components\\Dialog\\index.js",[],"C:\\test\\node_task\\src\\reportWebVitals.js",[],"C:\\test\\node_task\\src\\components\\MessagesList\\index.js",[],"C:\\test\\node_task\\src\\index.js",[],"C:\\test\\node_task\\src\\store\\store.js",[],"C:\\test\\node_task\\src\\components\\Users\\index.js",[],["80","81","82","83","84","85","86"],"C:\\test\\node_task\\src\\store\\reducers\\loadingReducer.js",[],{"ruleId":"87","severity":1,"message":"88","line":73,"column":42,"nodeType":"89","endLine":73,"endColumn":66,"fix":"90"},{"ruleId":"87","severity":1,"message":"91","line":76,"column":43,"nodeType":"89","endLine":76,"endColumn":65,"fix":"92"},{"ruleId":"87","severity":1,"message":"91","line":79,"column":40,"nodeType":"89","endLine":79,"endColumn":58,"fix":"93"},{"ruleId":"87","severity":1,"message":"91","line":80,"column":40,"nodeType":"89","endLine":80,"endColumn":58,"fix":"94"},{"ruleId":"95","severity":1,"message":"96","line":26,"column":6,"nodeType":"97","endLine":26,"endColumn":8,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":57,"column":22,"nodeType":"101","messageId":"102","endLine":57,"endColumn":33},{"ruleId":"87","severity":1,"message":"91","line":63,"column":46,"nodeType":"89","endLine":63,"endColumn":52,"fix":"103"},{"ruleId":"87","severity":1,"message":"91","line":73,"column":33,"nodeType":"89","endLine":73,"endColumn":45,"fix":"104"},{"ruleId":"87","severity":1,"message":"91","line":74,"column":32,"nodeType":"89","endLine":74,"endColumn":43,"fix":"105"},{"ruleId":"87","severity":1,"message":"91","line":75,"column":33,"nodeType":"89","endLine":75,"endColumn":45,"fix":"106"},{"ruleId":"87","severity":1,"message":"91","line":76,"column":33,"nodeType":"89","endLine":76,"endColumn":43,"fix":"107"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":3,"nodeType":"101","messageId":"102","endLine":9,"endColumn":14},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},"react/jsx-max-props-per-line","Prop `className` must be placed on a new line","JSXAttribute",{"range":"122","text":"123"},"Prop `alt` must be placed on a new line",{"range":"124","text":"125"},{"range":"126","text":"127"},{"range":"128","text":"129"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'dispatchMessage'. Either include them or remove the dependency array.","ArrayExpression",["130"],"no-console","Unexpected console statement.","MemberExpression","unexpected",{"range":"131","text":"132"},{"range":"133","text":"134"},{"range":"135","text":"136"},{"range":"137","text":"138"},{"range":"139","text":"140"},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["141"],"no-spaced-func",["142"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],[2508,2556],"htmlFor=\"message-input\"\nclassName=\"input__label\"",[2617,2660],"src={nonActiveLabel}\nalt=\"non-active-label\"",[2726,2760],"src={halfLabel}\nalt=\"active-label\"",[2787,2854],"src={halfLabel}\nalt=\"active-label\"\nclassName=\"input__label--second\"",{"desc":"143","fix":"144"},[2074,2129],"src={user.image}\nalt=\"\"\nclassName=\"interlocutor__photo\"",[2523,2581],"src={search}\nalt=\"search\"\nclassName=\"interlocutor__action\"",[2604,2660],"src={phone}\nalt=\"phone\"\nclassName=\"interlocutor__action\"",[2683,2741],"src={camera}\nalt=\"camera\"\nclassName=\"interlocutor__action\"",[2764,2820],"src={points}\nalt=\"menu\"\nclassName=\"interlocutor__action\"","padding-line-between-statements","func-call-spacing","Update the dependencies array to be: [dispatch, dispatchMessage]",{"range":"145","text":"146"},[862,864],"[dispatch, dispatchMessage]"]